{"version":3,"sources":["api.ts","context/TodoProvider.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoContext","createContext","isPressed","setIsPressed","activeTodo","setActiveTodo","isLoading","setIsLoading","isModalLoading","setIsModalLoading","todos","setTodos","query","setQuery","visibleTodos","option","setOption","TodoProvider","children","useState","useEffect","data","useMemo","filter","todo","title","toLocaleLowerCase","includes","completed","value","Provider","useTodos","useContext","TodoList","handleSelect","className","map","id","classNames","type","onClick","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","userOfTodo","setUserOfTodo","userId","href","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57c1d07d.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import {\n  FC, ReactNode, createContext, useContext, useEffect, useMemo, useState,\n} from 'react';\nimport { Todo } from '../types/Todo';\nimport { getTodos } from '../api';\n\ntype Props = {\n  children: ReactNode,\n};\n\ntype TodoProviderT = {\n  isPressed: boolean,\n  setIsPressed: React.Dispatch<React.SetStateAction<boolean>>,\n  activeTodo: Todo | null,\n  setActiveTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n  isLoading: boolean,\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  isModalLoading: boolean,\n  setIsModalLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  todos: Todo[],\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  visibleTodos: Todo[],\n  option: string,\n  setOption: React.Dispatch<React.SetStateAction<string>>,\n};\n\nconst TodoContext = createContext<TodoProviderT>({\n  isPressed: false,\n  setIsPressed: () => {},\n  activeTodo: null,\n  setActiveTodo: () => {},\n  isLoading: false,\n  setIsLoading: () => {},\n  isModalLoading: false,\n  setIsModalLoading: () => {},\n  todos: [],\n  setTodos: () => {},\n  query: '',\n  setQuery: () => {},\n  visibleTodos: [],\n  option: 'all',\n  setOption: () => {},\n});\n\nconst TodoProvider: FC<Props> = ({ children }) => {\n  const [isPressed, setIsPressed] = useState<boolean>(false);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isModalLoading, setIsModalLoading] = useState<boolean>(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState('all');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos().then(data => {\n      setTodos(data);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos\n      .filter(todo => todo.title.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()))\n      .filter(todo => {\n        switch (option) {\n          case 'active':\n            return !todo.completed;\n          case 'completed':\n            return todo.completed;\n          default:\n            return todo;\n        }\n      });\n  }, [query, todos, option]);\n\n  const value = useMemo(() => ({\n    isPressed,\n    setIsPressed,\n    activeTodo,\n    setActiveTodo,\n    isLoading,\n    setIsLoading,\n    isModalLoading,\n    setIsModalLoading,\n    todos,\n    setTodos,\n    query,\n    setQuery,\n    visibleTodos,\n    option,\n    setOption,\n  }), [\n    isPressed,\n    activeTodo,\n    isLoading,\n    todos,\n    query,\n    visibleTodos,\n    option,\n    isModalLoading]);\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\nexport default TodoProvider;\n\nexport const useTodos = () => useContext(TodoContext);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useTodos } from '../../context/TodoProvider';\n\nexport const TodoList: React.FC = () => {\n  const {\n    setIsPressed,\n    activeTodo,\n    setActiveTodo,\n    setIsModalLoading,\n    visibleTodos,\n  } = useTodos();\n\n  const handleSelect = (todo: Todo) => () => {\n    setIsPressed(true);\n    setIsModalLoading(true);\n    setActiveTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={handleSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': activeTodo !== todo,\n                    'fa-eye-slash': activeTodo === todo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useTodos } from '../../context/TodoProvider';\n\nexport const TodoFilter = () => {\n  const {\n    query, setQuery, option, setOption,\n  } = useTodos();\n\n  const handleDelete = () => {\n    setOption('all');\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={event => setOption(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDelete}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useTodos } from '../../context/TodoProvider';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    activeTodo,\n    setActiveTodo,\n    setIsPressed,\n    setIsLoading,\n    isModalLoading,\n    setIsModalLoading,\n  } = useTodos();\n\n  const [userOfTodo, setUserOfTodo] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!activeTodo) {\n      return;\n    }\n\n    getUser(activeTodo.userId).then(data => {\n      setUserOfTodo(data);\n      setIsModalLoading(false);\n      setIsLoading(false);\n    });\n  }, [activeTodo, setIsModalLoading, setIsLoading]);\n\n  const handleDelete = () => {\n    setIsPressed(false);\n    setActiveTodo(null);\n  };\n\n  if (!activeTodo) {\n    return (\n      <div>\n        Error\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isModalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {activeTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleDelete}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {activeTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {activeTodo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {userOfTodo?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { useTodos } from './context/TodoProvider';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const { isPressed, isLoading } = useTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isPressed && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport TodoProvider from './context/TodoProvider';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}